create table public.presentations
(
    id         bigint generated by default as identity
        constraint presentation_pkey
            primary key,
    created_at timestamp with time zone default now()      not null,
    presenter  uuid                     default auth.uid() not null
        constraint presentation_presenter_fkey
            references auth.users
            on update cascade on delete set null,
    title      text
);

alter table public.presentations
    owner to postgres;

grant select, update, usage on sequence public.presentations_id_seq to anon;

grant select, update, usage on sequence public.presentations_id_seq to authenticated;

grant select, update, usage on sequence public.presentations_id_seq to service_role;

create policy "All users can see presentations" on public.presentations
    as permissive
    for select
    to authenticated
    using (true);

create policy "Enable all access for presenter" on public.presentations
    as permissive
    for all
    using ((SELECT auth.uid() AS uid) = presenter);

grant delete, insert, references, select, trigger, truncate, update on public.presentations to anon;

grant delete, insert, references, select, trigger, truncate, update on public.presentations to authenticated;

grant delete, insert, references, select, trigger, truncate, update on public.presentations to service_role;

